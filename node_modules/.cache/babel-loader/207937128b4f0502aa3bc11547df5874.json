{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Asignment\\\\asignment\\\\src\\\\components\\\\Quiz.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { qBank } from './QuestCollection';\nimport '../style.css';\nimport PopUp from './PopUp';\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getQuestion = () => {\n      this.setState(() => {\n        return {\n          question: qBank[this.props.cIndex].question,\n          options: qBank[this.props.cIndex].options,\n          answer: qBank[this.props.cIndex].answer\n        };\n      });\n    };\n\n    this.onquestNext = () => {\n      const {\n        Answer,\n        score,\n        answer\n      } = this.state;\n      console.log(\"score\");\n\n      if (Answer === answer) {\n        console.log(\"Resubmitted\");\n        this.setState({\n          score: score + 1\n        });\n      }\n\n      this.setState({\n        cIndex: this.props.cIndex + 1,\n        Answer: null\n      });\n    };\n\n    this.submitHandler = () => {\n      console.log(\"Submitted\");\n\n      if (this.props.cIndex === qBank.length - 1) {\n        this.setState({\n          qFinish: true\n        });\n      }\n    };\n\n    this.checkAnswer = answer => {\n      this.setState({\n        Answer: answer,\n        disabled: false\n      });\n    };\n\n    this.componentDidUpdate = (prevProps, prevState) => {\n      if (this.props.cIndex !== prevProps.cIndex) {\n        this.setState(prevProps => {\n          return {\n            question: qBank[this.props.cIndex].question,\n            options: qBank[this.props.cIndex].options,\n            answer: qBank[this.props.cIndex].answer\n          };\n        });\n      }\n    };\n\n    this.onquestNext = this.onquestNext.bind(this);\n    this.submitHandler = this.submitHandler.bind(this);\n    this.state = {\n      options: [],\n      Answer: null,\n      disabled: true,\n      qFinish: false,\n      score: 0\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestion();\n  }\n\n  render() {\n    const {\n      question,\n      options,\n      Answer,\n      qFinish\n    } = this.state;\n\n    if (qFinish) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Congratulations!! Your Quiz is completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Your Score is \", this.state.score, \" out of \", qBank.length, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log(\"this.props\", this.props), console.log(\"Index\", this.props.cIndex), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: `Question ${this.props.cIndex + 1} of ${qBank.length} `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `options ${Answer === option ? \"selected\" : null}`,\n        onClick: () => this.checkAnswer(option),\n        children: option\n      }, option.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }, this)), this.props.cIndex < qBank.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: this.state.disabled,\n        onClick: () => {\n          this.props.onquestNext();\n          this.onquestNext();\n        },\n        children: \"Next \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), this.props.cIndex === qBank.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.submitHandler();\n        },\n        disabled: this.state.disabled,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cIndex: state.cIndex\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onquestNext: () => dispatch({\n      type: 'QUEST_NEXT_ASYNC',\n      value: 1\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);","map":{"version":3,"sources":["E:/Asignment/asignment/src/components/Quiz.js"],"names":["React","Component","connect","qBank","PopUp","Quiz","constructor","props","getQuestion","setState","question","cIndex","options","answer","onquestNext","Answer","score","state","console","log","submitHandler","length","qFinish","checkAnswer","disabled","componentDidUpdate","prevProps","prevState","bind","componentDidMount","render","map","option","index","id","mapStateToProps","mapDispatchToProps","dispatch","type","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport  { qBank }  from './QuestCollection'\r\nimport '../style.css'\r\nimport PopUp from './PopUp'\r\n\r\nclass Quiz extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onquestNext = this.onquestNext.bind(this);\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n\r\n        this.state = {\r\n             options: [],\r\n             Answer: null,\r\n             disabled: true,\r\n             qFinish: false,\r\n             score: 0\r\n        }\r\n    }\r\n\r\n\r\n    getQuestion = () => {\r\n        this.setState(() => {\r\n            return{\r\n                question: qBank[this.props.cIndex].question,\r\n                options: qBank[this.props.cIndex].options,\r\n                answer: qBank[this.props.cIndex].answer  \r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.getQuestion();\r\n    }\r\n\r\n    onquestNext = () => {\r\n        const { Answer, score, answer  } = this.state\r\n        console.log(\"score\")\r\n        if(Answer === answer){\r\n            console.log(\"Resubmitted\")\r\n            this.setState({\r\n                score: score + 1\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            cIndex: this.props.cIndex + 1,\r\n            Answer: null\r\n        })\r\n    }\r\n\r\n    submitHandler = () => {\r\n        console.log(\"Submitted\")\r\n        if(this.props.cIndex === qBank.length - 1){\r\n            this.setState({\r\n                qFinish: true\r\n            })\r\n        }\r\n    }\r\n\r\n    checkAnswer = answer => {\r\n        this.setState({\r\n            Answer: answer,\r\n            disabled: false\r\n        })\r\n    }\r\n\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if(this.props.cIndex !== prevProps.cIndex){\r\n           this.setState((prevProps) => {\r\n             return{\r\n                question: qBank[this.props.cIndex].question,\r\n                options: qBank[this.props.cIndex].options,\r\n                answer: qBank[this.props.cIndex].answer\r\n              }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const{ question, options, Answer, qFinish } = this.state\r\n        \r\n        if(qFinish) {\r\n         return (\r\n             <div>\r\n                 {/*{<PopUp text={this.state.score} />}*/}\r\n                 <h2>Congratulations!! Your Quiz is completed</h2>\r\n                 <h2>Your Score is {this.state.score} out of {qBank.length} </h2>\r\n             </div>\r\n          )\r\n         }\r\n         \r\n        return (\r\n            <div>\r\n                {console.log(\"this.props\", this.props)}\r\n                {console.log(\"Index\", this.props.cIndex)}\r\n                <h2>{question}</h2>\r\n                <span>{`Question ${this.props.cIndex + 1} of ${qBank.length} `}</span>\r\n                {\r\n                    options.map((option, index ) => \r\n                        <p key ={option.id} className={`options ${Answer === option? \"selected\" : null}`}\r\n                            onClick = {() => this.checkAnswer(option)}>\r\n                                {option}\r\n                        </p>\r\n                        )\r\n                }\r\n                {this.props.cIndex  < qBank.length - 1 && \r\n                <button disabled = {this.state.disabled} onClick={() => {this.props.onquestNext();this.onquestNext()}}>\r\n                    Next </button>}\r\n                {this.props.cIndex === qBank.length - 1 &&\r\n                <button onClick={() => {this.submitHandler()}} disabled ={this.state.disabled} >\r\n                    Submit\r\n                </button> }\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\n \r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n    cIndex: state.cIndex\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n    onquestNext: () => dispatch({type: 'QUEST_NEXT_ASYNC', value: 1}), \r\n    \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)\r\n\r\n"]},"metadata":{},"sourceType":"module"}